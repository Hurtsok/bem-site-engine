block post, mod view full {

    content: {
        var id = this.ctx.id,
            data = this.data;

        //находим полную информацию о посте по его id
        var source = leJspath.findByIdAndType(id, null, data.req.prefLocale);

        if(!source)
            return [];

        return [
            apply('author', this.ctx = {
                authors: source.authors,
                translators: source.translators
            }),

            apply('tags', this.ctx.content = source.tags),

            apply('date', this.ctx = {
                createDate: source.createDate,
                editDate: source.editDate
            }),

            apply('title', this.ctx.content = source),
            apply('contentFull', this.ctx.content = source.content),
            apply('issue', this.ctx.content = source.repo)
        ];
    }

    //автор и соавторы поста
    author: {
        elem: 'author',
        authors: this.ctx.authors,
        translators: this.ctx.translators
    }

    date: {
        elem: 'date',
        elemMods: { type: 'human' },
        createDate: this.ctx.createDate,
        editDate: this.ctx.editDate
    }

    //массив тегов для поста
    tags: {
        elem: 'tags',
        content: this.ctx.content
    }

    //заголовок поста
    title: {
        elem: 'title',
        id: this.ctx.content.id,
        type: this.ctx.content.type,
        title: this.ctx.content.longTitle || this.ctx.content.title,
        category: this.ctx.category || this.ctx.content.categories
    }

    //содержимое поста
    contentFull: {
        elem: 'content',
        url: apply('getUrl'),
        content: this.ctx.content
    }

    issue: {
        var repo = this.ctx.content,
            url = repo.url,
            treeish = repo.treeish;

        url = url.replace('git://', 'https://');
        url = url.replace('.git', '');

        var pRequestUrl = url + '/tree/' + treeish,
            issueUrl = url + '/issues';

        return {
            elem: 'issueLink',
            content: [
                BEM.I18N('post', 'issue1'),
                {
                    block: 'link',
                    url: pRequestUrl,
                    content: ' pull request '
                },
                BEM.I18N('post', 'issue2'),
                {
                    block: 'link',
                    url: issueUrl,
                    content: ' issue '
                }
            ]
        }
    }

    getUrl: {
        var lang = this.data.req.prefLocale == 'en' ? 'ru' : 'en',
            host = this.data.req.headers.host,
            path = this.data.req._parsedUrl.pathname;

            return 'http://' + lang +
                (host.indexOf(this.data.req.prefLocale) == 0 ? host.slice(host.indexOf('.')) : ('.' + host)) + path;
    }
}
