block post, mod view list-item {

    content: {
        var source = leData.getData()[this.ctx.node.id][this.data.req.prefLocale];

        if(!source) {
            logger.error('source not found for node %s and locale %s', this.ctx.node.id, this.data.req.prefLocale);
            return [];
        }

        return [

            apply('author', this.ctx = {
                authors: source.authors,
                translators: source.translators
            }),

            apply('tags', this.ctx.content = source.tags),
            apply('categories', this.ctx = {
                content: source.categories,
                type: source.type
            }),

            apply('date', this.ctx = {
                createDate: source.createDate,
                editDate: source.editDate
            }),

            apply('title', this.ctx = {
                node: this.ctx.node,
                content: source
            }),

            apply('summary', this.ctx.content = source.summary)
        ]
    }

    //authors of post
    author: {
        elem: 'author',
        authors: this.ctx.authors,
        translators: this.ctx.translators
    }

    //date of creation or last modification of post
    date: {
        elem: 'date',
        elemMods: { type: 'human' },
        createDate: this.ctx.createDate,
        editDate: this.ctx.editDate
    }

    //tags array of post
    tags: {
        elem: 'tags',
        content: this.ctx.content
    }

    //post categories
    categories: {
        elem: 'categories',
        type: this.ctx.type,
        content: this.ctx.content
    }

    //title of post
    title: {
        elem: 'title',
        url: this.ctx.node.url,
        title: this.ctx.content.longTitle || this.ctx.content.title
    }

    //summary of post
    summary: {
        elem: 'summary',
        content: this.ctx.content
    }
}
