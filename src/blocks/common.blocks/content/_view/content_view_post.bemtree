block content, mod view post {

    content: [
        applyNext(),
        { elem: 'content-area', content: '"<p>Обычно при вёрстке и программировании сайта разработчики опираются на допущение, что дизайн и технические требования к странице не изменятся в процессе разработки.  Дизайнер, верстальщик и программист каждый работает в своей области, часто не пересекаясь друг с другом:  Дизайнер создаёт дизайн в виде набора макетов Из этих макетов делается статическая HTML/CSS вёрстка. Она передаётся программисту для создания шаблонов на каком-то серверном языке и оживлении сайта с помощью JavaScript Такой подход хорошо работает только в том случае, если дизайн сайта остаётся неизменным всё время его жизни и изменения только добавляют контент. </p><p> Обычно при вёрстке и программировании сайта разработчики опираются на допущение, что дизайн и технические требования к странице не изменятся в процессе разработки.  Дизайнер, верстальщик и программист каждый работает в своей области, часто не пересекаясь друг с другом:  Дизайнер создаёт дизайн в виде набора макетов Из этих макетов делается статическая HTML/CSS вёрстка. Она передаётся программисту для создания шаблонов на каком-то серверном языке и оживлении сайта с помощью JavaScript Такой подход хорошо работает только в том случае, если дизайн сайта остаётся неизменным всё время его жизни и изменения только добавляют контент. </p><p> Обычно при вёрстке и программировании сайта разработчики опираются на допущение, что дизайн и технические требования к странице не изменятся в процессе разработки.  Дизайнер, верстальщик и программист каждый работает в своей области, часто не пересекаясь друг с другом:  Дизайнер создаёт дизайн в виде набора макетов Из этих макетов делается статическая HTML/CSS вёрстка. Она передаётся программисту для создания шаблонов на каком-то серверном языке и оживлении сайта с помощью JavaScript Такой подход хорошо работает только в том случае, если дизайн сайта остаётся неизменным всё время его жизни и изменения только добавляют контент. </p><p> Обычно при вёрстке и программировании сайта разработчики опираются на допущение, что дизайн и технические требования к странице не изменятся в процессе разработки.  Дизайнер, верстальщик и программист каждый работает в своей области, часто не пересекаясь друг с другом:  Дизайнер создаёт дизайн в виде набора макетов Из этих макетов делается статическая HTML/CSS вёрстка. Она передаётся программисту для создания шаблонов на каком-то серверном языке и оживлении сайта с помощью JavaScript Такой подход хорошо работает только в том случае, если дизайн сайта остаётся неизменным всё время его жизни и изменения только добавляют контент. </p><p> Обычно при вёрстке и программировании сайта разработчики опираются на допущение, что дизайн и технические требования к странице не изменятся в процессе разработки.  Дизайнер, верстальщик и программист каждый работает в своей области, часто не пересекаясь друг с другом:  Дизайнер создаёт дизайн в виде набора макетов Из этих макетов делается статическая HTML/CSS вёрстка. Она передаётся программисту для создания шаблонов на каком-то серверном языке и оживлении сайта с помощью JavaScript Такой подход хорошо работает только в том случае, если дизайн сайта остаётся неизменным всё время его жизни и изменения только добавляют контент. </p><p> Обычно при вёрстке и программировании сайта разработчики опираются на допущение, что дизайн и технические требования к странице не изменятся в процессе разработки.  Дизайнер, верстальщик и программист каждый работает в своей области, часто не пересекаясь друг с другом:  Дизайнер создаёт дизайн в виде набора макетов Из этих макетов делается статическая HTML/CSS вёрстка. Она передаётся программисту для создания шаблонов на каком-то серверном языке и оживлении сайта с помощью JavaScript Такой подход хорошо работает только в том случае, если дизайн сайта остаётся неизменным всё время его жизни и изменения только добавляют контент. </p><p>Обычно при вёрстке и программировании сайта разработчики опираются на допущение, что дизайн и технические требования к странице не изменятся в процессе разработки.  Дизайнер, верстальщик и программист каждый работает в своей области, часто не пересекаясь друг с другом:  Дизайнер создаёт дизайн в виде набора макетов Из этих макетов делается статическая HTML/CSS вёрстка. Она передаётся программисту для создания шаблонов на каком-то серверном языке и оживлении сайта с помощью JavaScript Такой подход хорошо работает только в том случае, если дизайн сайта остаётся неизменным всё время его жизни и изменения только добавляют контент. </p><p> Обычно при вёрстке и программировании сайта разработчики опираются на допущение, что дизайн и технические требования к странице не изменятся в процессе разработки.  Дизайнер, верстальщик и программист каждый работает в своей области, часто не пересекаясь друг с другом:  Дизайнер создаёт дизайн в виде набора макетов Из этих макетов делается статическая HTML/CSS вёрстка. Она передаётся программисту для создания шаблонов на каком-то серверном языке и оживлении сайта с помощью JavaScript Такой подход хорошо работает только в том случае, если дизайн сайта остаётся неизменным всё время его жизни и изменения только добавляют контент. </p><p> Обычно при вёрстке и программировании сайта разработчики опираются на допущение, что дизайн и технические требования к странице не изменятся в процессе разработки.  Дизайнер, верстальщик и программист каждый работает в своей области, часто не пересекаясь друг с другом:  Дизайнер создаёт дизайн в виде набора макетов Из этих макетов делается статическая HTML/CSS вёрстка. Она передаётся программисту для создания шаблонов на каком-то серверном языке и оживлении сайта с помощью JavaScript Такой подход хорошо работает только в том случае, если дизайн сайта остаётся неизменным всё время его жизни и изменения только добавляют контент. </p><p>Обычно при вёрстке и программировании сайта разработчики опираются на допущение, что дизайн и технические требования к странице не изменятся в процессе разработки.  Дизайнер, верстальщик и программист каждый работает в своей области, часто не пересекаясь друг с другом:  Дизайнер создаёт дизайн в виде набора макетов Из этих макетов делается статическая HTML/CSS вёрстка. Она передаётся программисту для создания шаблонов на каком-то серверном языке и оживлении сайта с помощью JavaScript Такой подход хорошо работает только в том случае, если дизайн сайта остаётся неизменным всё время его жизни и изменения только добавляют контент. </p><p> Обычно при вёрстке и программировании сайта разработчики опираются на допущение, что дизайн и технические требования к странице не изменятся в процессе разработки.  Дизайнер, верстальщик и программист каждый работает в своей области, часто не пересекаясь друг с другом:  Дизайнер создаёт дизайн в виде набора макетов Из этих макетов делается статическая HTML/CSS вёрстка. Она передаётся программисту для создания шаблонов на каком-то серверном языке и оживлении сайта с помощью JavaScript Такой подход хорошо работает только в том случае, если дизайн сайта остаётся неизменным всё время его жизни и изменения только добавляют контент. </p><p> Обычно при вёрстке и программировании сайта разработчики опираются на допущение, что дизайн и технические требования к странице не изменятся в процессе разработки.  Дизайнер, верстальщик и программист каждый работает в своей области, часто не пересекаясь друг с другом:  Дизайнер создаёт дизайн в виде набора макетов Из этих макетов делается статическая HTML/CSS вёрстка. Она передаётся программисту для создания шаблонов на каком-то серверном языке и оживлении сайта с помощью JavaScript Такой подход хорошо работает только в том случае, если дизайн сайта остаётся неизменным всё время его жизни и изменения только добавляют контент. </p>"'}
    ]
}