block post, mod view full {

    content: {
        var id = this.ctx.id,
            data = this.data,
            source = data.source;

        //находим полную информацию о посте по его id
        source = leJspath.findByIdAndType(source, id, null, data.lang);

        if(!source)
            return [];

        return [
            apply('author', this.ctx.content = source.authors),
            apply('translator', this.ctx.content = source.translators),
            apply('createDate', this.ctx.content = source.createDate),
            apply('editDate', this.ctx.content = source.editDate),
            apply('tags', this.ctx.content = source.tags),
            apply('translation'),
            apply('title', this.ctx.content = source.title),
            apply('contentFull', this.ctx.content = source.content)
        ];
    }

    //автор и соавторы поста
    author: {
        elem: 'author',
        content: this.ctx.content
    }

    //переводчик или группа переводчиков для поста
    translator: {
        elem: 'translator',
        content: this.ctx.content
    }

    //дата создания поста
    createDate: {
        elem: 'date',
        elemMods: {'type': 'create'},
        content: this.ctx.content
    }

    //дата изменения поста
    editDate: {
        elem: 'date',
        elemMods: {'type': 'edit'},
        content: this.ctx.content
    }

    //массив тего для поста
    tags: {
        elem: 'tags',
        content: this.ctx.content
    }

    //заголовок поста
    title: {
        elem: 'title',
        mods: { static: 'yes' },
        content: this.ctx.content
    }

    //содержимое поста
    contentFull: {
        var lang = this.data.lang == 'en' ? 'ru' : 'en',
            host = this.data.req.headers.host,
            url = 'http://' + lang + host.slice(host.indexOf('.')) + this.data.req.path;

        return {
            elem: 'content',
            url: url,
            content: this.ctx.content
        }
    },

    //ссылка на пост в другой локализации
    translation: {
        var lang = this.data.lang == 'en' ? 'ru' : 'en',
            host = this.data.req.headers.host,
            url = 'http://' + lang + host.slice(host.indexOf('.')) + this.data.req.path;

        return {
            elem: 'translation',
            content: [
                {
                    block: 'link',
                    url: url,
                    content: BEM.I18N('post', 'translation')
                }
            ]
        }
    }
}
