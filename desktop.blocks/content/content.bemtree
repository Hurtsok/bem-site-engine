block content {

    default: {
        return applyNext(
            this._datasrc = this.data.params);
    }

    content: {
        return this.doAsync(
                leDatasrc.loadData.bind(leDatasrc, {})
            )
            .then(
                function(result) {
                    leJspath.setSource(result); //кешируем данные
                    return apply('processData');
                },
                function(err) {
                    return apply('error', this.ctx = err);
                },
                this
            );
    }

    processData: {
        this.layout = { block : 'layout', elem : 'col', mods: {type: 'center'} };

        var data = this.data, //объект хранящий request, response и.т.д
            page = data.page, //страница сайта [method, libraries, tools, articles, news, authors, tags, index]
            buf = [];

        console.debug('PAGE = ' + page);

        // leJspath.stringify(data);

        //отрисовка главного меню сайта
        buf.push(apply(this._mode = '', this.ctx = { block: 'main-menu' }));

        switch(page) {
            case 'method':
                buf.push(apply('method'));
                break;
            case 'libs':
                buf.push(apply('libraries'));
                break;
            case 'articles':
                buf.push(apply('articles'));
                break;
            case 'tools':
                buf.push(apply('tools'));
                break;
            case 'news':
                buf.push(apply('news'));
                break;
            case 'authors':
                buf.push(apply('authors'));
                break;
            case 'tags':
                buf.push(apply('tags'));
                break;
            case 'index':
                buf.push(apply('index'));
                break;
            default :
                buf.push(apply('index'));
                break;
        }

        return buf;
    }

    //страница методологии
    method: {
        return apply(this._mode = '', this.ctx = {
            block: 'p-method',
            mix: this.layout
        });
    }

    //страница библиотек
    libraries: {
        return apply(this._mode = '', this.ctx = {
            block: 'p-libraries',
            mix: this.layout
        });
    }

    //страница для отображения статей /articles
    articles: {
        return apply(this._mode = '', this.ctx = {
            block: 'p-articles',
            mix: this.layout
        });
    }

    //страница инструментов /tools
    tools: {
        return apply(this._mode = '', this.ctx = {
            block: 'p-tools',
            mix: this.layout
        });
    }

    //страница блога /news
    news: {
        return apply(this._mode = '', this.ctx = {
            block: 'p-news',
            mix: this.layout
        });
    }

    //страница авторов /authors
    authors: {
        return apply(this._mode = '', this.ctx = {
            block: 'p-authors',
            mix: this.layout,
            id: this.data.params.id
        });
    }

    //страница поиска по тегам /tags
    tags: {
        return apply(this._mode = '', this.ctx = {
            block: 'p-tags',
            mix: this.layout,
            id: this.data.params.id
        });
    }

    //главная страница сайта
    index: {
        return apply(this._mode = '', this.ctx = {
            block: 'p-index',
            mix: this.layout
        });
    }
}
