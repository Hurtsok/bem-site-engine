block menu, mod type mixed {

    content: {
        var data = this.data, //объект, хранящий всю информацию о request, response и.т.д.
            type = this.ctx.type,
            query = this.ctx.query,
            id = this.ctx.id,
            self = this;

        var source = leJspath.find(query.predicate, query.substitution);

        //сортируем в алфавитном порядке
        //source = leJspath.sort(source, [{ field: 'title' }]);

        var categories = null,
            name = null,
            url = null,
            items = {},
            buf = [];

        if(this._.isArray(source)) {
            source.forEach(function(post) {
                categories = post.categories;
                if(self._.isArray(categories)) {
                    categories.forEach(function(category) {
                        url = category['url'] || category;
                        if(!items[url]) {
                            items[url] = category;
                            items[url]['posts'] = [];
                        }
                        items[url]['posts'].push(post);
                    });
                }
            });

            Object.getOwnPropertyNames(items).forEach(function(url) {
                var category = items[url];
                buf.push(apply(
                    this._mode = '',
                    this.ctx = {
                        elem: 'item',
                        elemMods: {
                            type : 'categories',
                            complex: 'yes'
                        },
                        name: category.name
                    }
                ));
                category.posts.forEach(function(post) {
                    buf.push(apply(
                        this._mode = '',
                        this.ctx = {
                            elem: 'item',
                            elemMods: {
                                type : 'articles',
                                active : apply('active', this.ctx = self._.extend(self.ctx, { item : post })) },
                            id: post.id,
                            category: self._.isSimple(category) ? category : category.url
                        }
                    ));
                });
            });
        }

        return buf;
    }

    //определение активного пункта меню и установка значения модификатора active
    active: {
        return (this.ctx.id && this.ctx.id === this.ctx.item.id) ? 'yes' : '';
    }
}
