block menu, mod type translators {

    content: {

        var data = this.data, //объект, хранящий всю информацию о request, response и.т.д.
            source = data.source; //содержимое модели (файл data.json)

        source = leJspath.filter(source,
                [{ field: 'type', operand: '===', value: this.mods['type']}], data.lang);

        //сортируем в алфавитном порядке по фамилии и имени
        source = leJspath.sort(source, [{ field: 'lastName' }, { field: 'firstName' }]);

        if(this._.isArray(source)) {
            var buf = [];

            buf.push({elem: 'title'});

            //цикличеки применяем шаблоны к элементу item текущего блока
            //с модификатором соотвествующим полю мета-информации
            //значения которого отображаются в меню и идентификацией
            //текущего значения для выделения активного пункта меню
            source.forEach(function(item) {
                buf.push(apply(
                    this._mode = '',
                    this.ctx = {
                        elem: 'item',
                        elemMods: {
                            type : this.mods['type'],
                            active : apply('active', this.ctx = this._.extend(this.ctx, { item : item }))
                        },
                        id: item.id
                    }
                ));
            });

            return buf;
        }
    }

    //определение активного пункта меню и установка значения модификатора active
    active: {
        return (this.ctx.id && this.ctx.id === this.ctx.item.id) ? 'yes' : '';
    }
}
