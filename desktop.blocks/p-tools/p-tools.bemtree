block p-tools {

    content: {
        var TYPE = 'tools';

        var data = this.data,
            res = leJspath.findCategoryAndIdByUrl(data.req.path, TYPE, data.lang),
            id = res && res.id,
            category = res && res.category,
            articlesQuery = null,
            isOnlyOnePost = false;

        if(category) {
            var predicate = '.' + data.lang + '{.type === $type}' +
                '{.categories === $category || .categories.url === $category}';

            var rootId = leJspath.findRootPostIdByCategory(TYPE, category, data.lang);
            if(rootId) {
                predicate +=  '{.id !== "' + rootId + '"}';
            }

            if(!id && rootId){
                id = rootId;
            }

            articlesQuery = {
                predicate: predicate,
                substitution: { type: TYPE, category: category }
            };

            //проверка на то, что для данного инструмента есть только один пост
            //если это так, то показываем его в развернутом виде а меню постов прячем
            var source = leJspath.find(articlesQuery.predicate, articlesQuery.substitution);
            if(this._.isArray(source) && source.length == 1) {
                isOnlyOnePost = true;
                id = source[0].id;
            }
        }else {
            id = leJspath.findRootPostId(TYPE, data.lang);
            if(!id) {
                articlesQuery = {
                    predicate: '.' + data.lang + '{.type === $type}',
                    substitution: { type: TYPE }
                }
            }
        }

        var toolsMenu = {
            block: 'g-tools-menu',
            type: TYPE,
            category: category
        },

        //меню для отображения для выбранного инструмента
        postsMenu = {
            block: 'g-posts-menu',
            config: {
                type: TYPE,
                query: articlesQuery,
                sort: [{ field: 'title' }],
                category: category,
                id: id
            }
        },

        //отображение единичного поста
        post = {
            block: 'g-post',
            id: id
        },

        //список постов с развернутой мета-информацией
        posts = {
            block: 'g-posts',
            config: {
                query: articlesQuery,
                category: category
            }
        },

        //блок объединяющий меню постов по конкретному инструменту
        //и список постов в развернутом виде или конкретный пост
        //в зависимости от наличия или отсутствия переданного id
        tool = {
            block: 'center',
            mix: { block : 'layout', elem : 'col', mods: { type: 'center' } },
            content: [
                {
                   block: 'layout',
                    mods: { section: 'p-menu' },
                    content: [ postsMenu, id ? post : posts ]
                }
            ]
        },

        //корневой пост для раздела инструментов
        rootPost = {
            block: 'center',
            mix: { block : 'layout', elem : 'col', mods: { type: 'center' } },
            content: {
                block: 'g-post',
                id: id
            }
        };

        return [
            {
                block: 'layout',
                mods: {section: 'p-menu'},
                content: [
                    toolsMenu,
                    (!category && id) || (isOnlyOnePost && id) ? rootPost : tool
                ]
            }
        ];
    }
}
