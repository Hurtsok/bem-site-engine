block p-news {

    content: {
        var data = this.data, //объект, хранящий всю информацию о request, response и.т.д.
            type = 'news',
            id = this.ctx.id,
            query = {};

        if(id && id.length > 0) {
            query = {
                predicate: '.' + data.lang + '{.type === $type}{.categories === $category || .categories.url === $category}.id',
                substitution: { type: type, category: id }
            };
        }else {
            query = {
                predicate: '.' + data.lang + '{.type === $type}.id',
                substitution: { type: type }
            };
        }

        return [
            {
                block: 'layout',
                mods: {section: 'p-menu'},
                content: [
                    {
                        block: 'left',
                        mix: { block : 'layout', elem : 'col', mods: {type: 'left', fixed: 'yes'} },
                        content: [
                            {
                                block: 'menu',
                                type: type,
                                id: id,
                                mods: { type: 'categories' }
                            }
                        ]
                    },
                    {
                        block: 'center',
                        mix: { block : 'layout', elem : 'col', mods: {type: 'center'} },
                        content: [
                            {
                               block: 'layout',
                                mods: {section: 'p-menu'},
                                content: [
                                    {
                                        block: 'left',
                                        mix: { block : 'layout', elem : 'col', mods: {type: 'left', fixed: 'yes'} },
                                        content: [
                                            {
                                                block: 'menu',
                                                type: type,
                                                query: query,
                                                mods: { type: 'articles' }
                                            }
                                        ]
                                    },
                                    {
                                        block: 'center',
                                        mix: { block : 'layout', elem : 'col', mods: {type: 'center'} },
                                        content: [
                                            {
                                                block: 'posts',
                                                mods: { view: 'articles' },
                                                config: {
                                                    query: query,
                                                    sort: leJspath.parseQuery(this.data, 'sort')
                                                }
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    }
                ]
            }
        ];
    }

    filter: {
        var data = this.data,
            source = data.source,
            type = data.params.type ? data.params.type : data.page, //параметр типа
            url = data.req.url, //строка запроса

            filterConfig = [{ field: 'type', operand: '===', value: type }],
            filterDate = apply('date-filter', this.ctx = url);

        if(filterDate.dateFrom && filterDate.dateTo) {
            filterConfig.push(
                { field: 'createDate', operand: '>=', value: filterDate.dateFrom },
                { field: 'createDate', operand: '<', value: filterDate.dateTo }
            );
        }

        url = filterDate.url.split('/').slice(2); //отрезаем /{type}/

        //console.debug('URL= ' + url);

        return filterConfig;
    }

    date-filter: {
        var YEAR_REGEXP = /[2][0-9]{3}/;
            MONTH_REGEXP = /([2][0-9]{3})\/([0][1-9]|[1][0-2])/;
            DAY_REGEXP = /([2][0-9]{3})\/([0][1-9]|[1][0-2])\/([0][0-9]|[1-2][0-9]|[3][0-1])/;

        var url = this.ctx,
            date = null,
            match = null,
            dateFrom = null,
            dateTo = null;

        //находим число, месяц и день
        match = DAY_REGEXP.exec(url);
        if(match) {
            date = match[0].split('/');

            dateFrom = (new Date(date[0], date[1] - 1, date[2])).getTime();
            dateTo = dateFrom + 86400000;

            url = url.replace(DAY_REGEXP, '');
        }

        //находим число и месяц
        match = MONTH_REGEXP.exec(url);
        if(match) {
            date = match[0].split('/');

            dateFrom = (new Date(date[0], date[1] - 1, 1)).getTime();
            dateTo = date[1] < 12 ? (new Date(date[0], date[1], 1)).getTime() : (new Date(+date[0] + 1, 0, 1)).getTime();

            url = url.replace(MONTH_REGEXP, '');
        }

        //находим год
        match = YEAR_REGEXP.exec(url);
        if(match) {
            year = match[0];

            dateFrom = (new Date(year, 0, 1)).getTime();
            dateTo = (new Date(+year + 1, 0, 1)).getTime();

            url = url.replace(YEAR_REGEXP, '');
        }

        return { dateFrom: dateFrom, dateTo: dateTo, url: url };
    }
}
